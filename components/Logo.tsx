/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState } from 'react'
import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { a } from '@react-spring/three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { MeshPhongMaterialProps } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Union_4001: THREE.Mesh
  }
  materials: {
    ['SVGMat.005']: THREE.MeshStandardMaterial
  }
}

type Props = JSX.IntrinsicElements['mesh'] & {
  materialProps?: MeshPhongMaterialProps;
  color?: MeshPhongMaterialProps['color'];
}

export const Logo: React.FC<Props> = React.forwardRef(({ materialProps, color, ...props }, ref) => {
    const { nodes } = useGLTF('/logo.gltf') as GLTFResult;
    const [scale, setScale] = useState<number>(65);

    return (
        <a.mesh ref={ref} onPointerEnter={() => setScale(75)} onPointerLeave={() => setScale(65)} geometry={nodes.Union_4001.geometry} scale={scale} {...props}>
            <a.meshPhongMaterial shininess={5} {...materialProps} color={color || '#5A5A5A'} />
        </a.mesh>
    )
})

useGLTF.preload('/logo.gltf');
