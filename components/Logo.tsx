/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState } from 'react'
import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { a } from '@react-spring/three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { MeshPhongMaterialProps } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Union_4001: THREE.Mesh
  }
  materials: {
    ['SVGMat.005']: THREE.MeshStandardMaterial
  }
}

type Props = 
  JSX.IntrinsicElements['mesh'] &
  { materialProps?: MeshPhongMaterialProps };

export const Logo: React.FC<Props> = React.forwardRef((props, ref) => {
    const { materialProps, ...meshProps } = props;
    const { nodes } = useGLTF('/logo.gltf') as GLTFResult;

    return (
        <a.mesh ref={ref} geometry={nodes.Union_4001.geometry} {...meshProps}>
            <a.meshPhongMaterial shininess={5} color="hsl(0, 0%, 4%)" {...materialProps} />
        </a.mesh>
    )
})

useGLTF.preload('/logo.gltf');
